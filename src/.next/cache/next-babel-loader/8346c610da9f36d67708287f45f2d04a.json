{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/gholgot/Dev/dumprepo/prismic-training-next/src/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport { linkResolver } from '../shared/utils/linkResolver';\nimport { apiEndpoint } from '../../prismic-configuration';\nimport Prismic from 'prismic-javascript';\nimport { CTABanner, FeaturedItems, NumberedItems, Separator, TextBlock } from '../components/slices';\nimport Layout from '../components/layouts';\n\nconst Home = props => __jsx(Layout, _extends({}, props.layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), __jsx(RenderBody, {\n  home: props.data,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}));\n\nconst RenderSlices = ({\n  slices\n}) => {\n  return slices.map((slice, index) => {\n    const res = (() => {\n      switch (slice.slice_type) {\n        case 'cta_banner':\n          return __jsx(\"div\", {\n            key: index,\n            className: \"homepage-slice-wrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, __jsx(CTABanner, {\n            slice: slice,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }));\n\n        case 'featured_items':\n          return __jsx(\"div\", {\n            key: index,\n            className: \"homepage-slice-wrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, __jsx(FeaturedItems, {\n            slice: slice,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }));\n\n        case 'big_bullet_item':\n          return __jsx(\"div\", {\n            key: index,\n            className: \"homepage-slice-wrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, __jsx(NumberedItems, {\n            slice: slice,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }));\n\n        case 'separator':\n          return __jsx(\"div\", {\n            key: index,\n            className: \"homepage-slice-wrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, __jsx(Separator, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }));\n\n        case 'text_block':\n          return __jsx(\"div\", {\n            key: index,\n            className: \"homepage-slice-wrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, __jsx(TextBlock, {\n            slice: slice,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }));\n\n        default:\n          return;\n      }\n    })();\n\n    return res;\n  });\n};\n\nconst RenderBody = ({\n  home\n}) => __jsx(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, __jsx(\"header\", {\n  className: \"homepage-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"l-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"homepage-header-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, RichText.render(home.title, linkResolver)))), __jsx(\"section\", {\n  className: \"homepage-banner\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, __jsx(\"img\", {\n  className: \"homepage-banner-image\",\n  src: home.banner_image.url,\n  alt: home.banner_image.alt,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"homepage-banner-box-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"homepage-banner-box\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, RichText.render(home.banner_text, linkResolver)))), __jsx(\"div\", {\n  className: \"homepage-slices-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, __jsx(RenderSlices, {\n  slices: home.body,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n})));\n\nasync function getHomePage(req) {\n  const API = await Prismic.getApi(apiEndpoint, {\n    req\n  });\n  return API.getSingle('homepage', {\n    'fetchLinks': 'product.sub_title'\n  });\n}\n\nasync function getLayout(req) {\n  const API = await Prismic.getApi(apiEndpoint, {\n    req\n  });\n  return API.getSingle('layout');\n}\n\nHome.getInitialProps = async function (context) {\n  const req = context.req;\n  const home = await getHomePage(req);\n  const layout = await getLayout(req);\n  return {\n    data: home.data,\n    layout: layout\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gholgot/Dev/dumprepo/prismic-training-next/src/pages/index.js"],"names":["React","RichText","linkResolver","apiEndpoint","Prismic","CTABanner","FeaturedItems","NumberedItems","Separator","TextBlock","Layout","Home","props","layout","data","RenderSlices","slices","map","slice","index","res","slice_type","RenderBody","home","render","title","banner_image","url","alt","banner_text","body","getHomePage","req","API","getApi","getSingle","getLayout","getInitialProps","context"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { RichText } from 'prismic-reactjs'\nimport { linkResolver } from '../shared/utils/linkResolver'\nimport { apiEndpoint } from '../../prismic-configuration'\nimport Prismic from 'prismic-javascript'\nimport { CTABanner, FeaturedItems, NumberedItems, Separator, TextBlock } from '../components/slices'\n\nimport Layout from '../components/layouts'\n\n\n\nconst Home = (props) => (\n  <Layout {...props.layout}>\n    <RenderBody home={props.data} />    \n  </Layout>\n)\n\nconst RenderSlices = ({ slices }) => {\n  return slices.map((slice, index) => {\n    const res = (() => {\n      switch (slice.slice_type) {\n        case 'cta_banner': return (\n          <div key={index} className=\"homepage-slice-wrapper\">\n            <CTABanner slice={slice} />\n          </div>\n        )\n\n        case 'featured_items': return (\n          <div key={index} className=\"homepage-slice-wrapper\">\n            <FeaturedItems slice={slice} />\n          </div>\n        )\n\n        case 'big_bullet_item': return (\n          <div key={index} className=\"homepage-slice-wrapper\">\n            <NumberedItems slice={slice} />\n          </div>\n        )\n\n        case 'separator': return (\n          <div key={index} className=\"homepage-slice-wrapper\">\n            <Separator />\n          </div>\n        )\n\n        case 'text_block': return (\n          <div key={index} className=\"homepage-slice-wrapper\">\n            <TextBlock slice={slice} />\n          </div>\n        )\n\n        default: return\n      }\n    })();\n    return res;\n  })\n}\n\nconst RenderBody = ({ home }) => (\n  <React.Fragment>\n    <header className=\"homepage-header\">\n      <div className=\"l-wrapper\">\n        <div className=\"homepage-header-title\">\n          {RichText.render(home.title, linkResolver)}\n        </div>\n      </div>\n    </header>\n\n    <section className=\"homepage-banner\">\n      <img className=\"homepage-banner-image\" src={home.banner_image.url} alt={home.banner_image.alt} />\n      <div className=\"homepage-banner-box-wrapper\">\n        <div className=\"homepage-banner-box\">\n          {RichText.render(home.banner_text, linkResolver)}\n        </div>\n      </div>\n    </section>\n\n    <div className=\"homepage-slices-wrapper\">\n      <RenderSlices slices={home.body} />\n    </div>\n  </React.Fragment>\n);\n\n\nasync function getHomePage(req) {\n  const API = await Prismic.getApi(apiEndpoint, { req })\n  return API.getSingle('homepage', {'fetchLinks': 'product.sub_title'})\n}\n\nasync function getLayout(req) {\n  const API = await Prismic.getApi(apiEndpoint, { req })\n  return  API.getSingle('layout');\n}\n\nHome.getInitialProps = async function (context) {\n  const req = context.req;\n  const home = await getHomePage(req);\n  const layout = await getLayout(req);\n  return {\n    data: home.data,\n    layout: layout\n  }\n};\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}